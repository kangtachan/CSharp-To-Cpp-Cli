//////////////////////////////////////////////////////////////////////////
//
//	This file is auto generated using C# to C++ Generator
//	https://github.com/lodle/CSharp-To-Cpp-Cli
//
//////////////////////////////////////////////////////////////////////////

#pragma once

#include "NativeObjectI.h"

#include <xstring>
#include <msclr\gcroot.h>
#include <msclr\marshal.h>
#include <msclr\marshal_cppstd.h>

class NativeObjectCPP : public NativeObjectI
{
public:
	void SetInternal(System::Object^ _Internal)
	{
		m_Object = _Internal;
	}		

	virtual void ToString(char* szBuff, int nBuffSize)
	{
		std::string szRes = msclr::interop::marshal_as<std::string>(m_Object->ToString());
		strncpy_s(szBuff, nBuffSize, szRes.c_str(), szRes.size());
	}

	virtual int GetHashCode()
	{
		return m_Object->GetHashCode();
	}

	virtual bool Equals(NativeObjectI* pObject)
	{
		NativeObjectCPP* pReal = dynamic_cast<NativeObjectCPP*>(pObject);

		if (!pReal)
			return false;

		return m_Object->Equals(pReal->m_Object);
	}

	virtual void Destroy()
	{
		delete this;
	}

	virtual bool HasError()
	{
		return m_szLastError.size() > 0;
	}

	virtual void GetLastError(char* szBuff, int nBuffSize)
	{
		strncpy_s(szBuff, nBuffSize, m_szLastError.c_str(), m_szLastError.size());
	}

protected:
	std::string m_szLastError;

private:
	msclr::gcroot<System::Object^> m_Object;
};