//////////////////////////////////////////////////////////////////////////
//
//	This file is auto generated using C# to C++ Generator
//	https://github.com/lodle/CSharp-To-Cpp-Cli
//
//////////////////////////////////////////////////////////////////////////

#pragma once

#include "NativeObjectI.h"

#include <xstring>

//Need to include this here as marshal includes <gcroot.h> which removes the namespace from <msclr\gcroot.h>
#include <msclr\gcroot.h>
#include <msclr\marshal.h>
#include <msclr\marshal_cppstd.h>

ref class NativeObjectProxyCPP
{
public:
	NativeObjectProxyCPP(NativeObjectProxyI *_Internal)
	{
		m_Object = _Internal;
	}

	virtual ~NativeObjectProxyCPP()
	{
		m_Object->Destroy();
	}

	virtual System::String^ ToString() override
	{
		char szBuff[255] = {0};
		m_Object->ToString(szBuff, 255);

		return gcnew System::String(szBuff);
	}

	virtual int GetHashCode() override
	{
		return m_Object->GetHashCode();
	}

	bool HasError()
	{
		return m_Object->HasError();
	}

	std::string GetLastError()
	{
		char szError[255] = {0};
		m_Object->GetLastError(szError, 255);

		return std::string(szError, 255);
	}

private:
	NativeObjectProxyI* m_Object;
};