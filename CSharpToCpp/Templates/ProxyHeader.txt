#pragma once

using namespace {{ c.Namespace }};

#include "{{ c.Name }}I.h"
#include "{{ c.BaseName }}.h"

{% for header in c.Headers -%}
#include "{{ header }}.h"
{% endfor -%}

ref class {{ c.Name }}CPP : public {{ c.BaseName }}CPP, {{ c.ManagedName }}
{
public:
	{{ c.Name }}CPP({{ c.Name }}I* _{{ c.Name }}) : {{ c.BaseName }}CPP(_{{ c.Name }})
	{
		m_{{ c.Name }} = _{{ c.Name }};
	}
	
	//! Methods
{% for fun in c.Functions -%}
	virtual {{ fun.ReturnType }} {{ fun.Name }}({% parameters fun.Parameters %});
{% endfor -%}

private:
	{{ c.Name }}I* m_{{ c.Name }};
};