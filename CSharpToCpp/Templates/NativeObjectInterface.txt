//////////////////////////////////////////////////////////////////////////
//
//	This file is auto generated using C# to C++ Generator
//	https://github.com/lodle/CSharp-To-Cpp-Cli
//
//////////////////////////////////////////////////////////////////////////

#pragma once

#ifndef DLLEXPORT
	#ifndef CPP_CLI_DLL
		#define DLLEXPORT __declspec( dllimport )
	#else
		#define DLLEXPORT __declspec( dllexport )
	#endif
#endif

#include <xstring>

class NativeStringI
{
public:
	virtual const char* GetBuffer()=0;
	virtual size_t GetSize()=0;

	virtual void Destroy()=0;
};

class NativeObjectI
{
public:
	virtual void Destroy()=0;

	virtual void ToString(char* szBuff, size_t nBuffSize)=0;
	virtual int GetHashCode()=0;

	virtual bool Equals(NativeObjectI* pObject)=0;

	virtual bool HasError()=0;
	virtual void GetLastError(char* szBuff, size_t nBuffSize)=0;
};

class CNativeObject
{
public:
	void SetInterface(NativeObjectI* pObject)
	{
		m_pObject = pObject;
	}

	virtual std::string ToString()
	{
		char szBuff[255] = {0};
		m_pObject->ToString(szBuff, 255);
		return std::string(szBuff);
	}

	virtual int GetHashCode()
	{
		return m_pObject->GetHashCode();
	}

	virtual bool Equals(NativeObjectI* pObject)
	{
		return m_pObject->Equals(pObject);
	}

	void CheckForError()
	{
		if (!m_pObject->HasError())
			return;

		char szBuff[255] = {0};
		m_pObject->GetLastError(szBuff, 255);
		throw std::exception(szBuff, 255);
	}

private:
	NativeObjectI* m_pObject;
};